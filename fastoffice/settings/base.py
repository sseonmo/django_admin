"""
Django settings for fastoffice project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
print(" @@@@@@@@@@@@@ BASE_DIR @@@@@@@@@@@@@@@")
print("BASE_DIR : ", BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "sqzy*g&9&edvul9)5#&7&1-f7c3d_6&-t!wxb_j+$7vd-0u2@w"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
#  "django-grappelli"은 INSTALLED_APPS 첫줄에 들어가야 한다. - (before django.contrib.admin)
#  "django_admin_env_notice" 은 "django.contrib.admin" 이에 들어가야한다.
INSTALLED_APPS = [
	# "grappelli",
	'adminactions',
	'django_admin_env_notice',
	"django.contrib.admin",
	"django.contrib.auth",
	"django.contrib.contenttypes",
	"django.contrib.sessions",
	"django.contrib.messages",
	"django.contrib.staticfiles",
]

# 추가하는걸 구분하기 위해
INSTALLED_APPS += {
	"fastadmin",
	"rangefilter",
	"debug_toolbar",
	"admin_honeypot",
}

MIDDLEWARE = [
	"django.middleware.security.SecurityMiddleware",
	"django.contrib.sessions.middleware.SessionMiddleware",
	"django.middleware.common.CommonMiddleware",
	"django.middleware.csrf.CsrfViewMiddleware",
	"django.contrib.auth.middleware.AuthenticationMiddleware",
	"django.contrib.messages.middleware.MessageMiddleware",
	"django.middleware.clickjacking.XFrameOptionsMiddleware",
]
MIDDLEWARE += [
	"debug_toolbar.middleware.DebugToolbarMiddleware",
]
INTERNAL_IPS = [
	# ...
	"127.0.0.1",
	# ...
]

ROOT_URLCONF = "fastoffice.urls"

TEMPLATES = [
	{
		"BACKEND": "django.template.backends.django.DjangoTemplates",
		# "DIRS": [],
		"DIRS": [os.path.join(BASE_DIR, "templates/")],
		"APP_DIRS": True,
		"OPTIONS": {
			"context_processors": [
				"django.template.context_processors.debug",
				"django.template.context_processors.request",
				"django.contrib.auth.context_processors.auth",
				"django.contrib.messages.context_processors.messages",
				"django_admin_env_notice.context_processors.from_settings",
			],
		},
	},
]

WSGI_APPLICATION = "fastoffice.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# in terminal
"""
mysqlclient 설치 시 에러 - 1번실행 후 안내에 나오는 export LDFLAGS 명령어 복사해서 실행시킨다.
1. brew info openssl - 명령어 실행 후 
2. export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib"
3. pipenv install mysqlclient==1.3.13
- 참조 : https://medium.com/@shandou/pipenv-install-mysqlclient-on-macosx-7c253b0112f2

brew install mysql@5.7 에러날땐
2020-02-08T10:27:42.843402Z 0 [ERROR] --initialize specified but the data directory has files in it. Aborting.
2020-02-08T10:27:42.843425Z 0 [ERROR] Aborting

1. brew uninstall mysql@5.7
2. mysql 관련된 모든 파일 삭제
    1. rm -rf /use/local/var/mysql
    2. rm -rf /use/local/etc/my.cnf
3. brew uninstall mysql@5.7

"""
DATABASES = {
	# "default": {
	#     "ENGINE": "django.db.backends.sqlite3",
	#     "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
	# }
	"default": {
		"ENGINE": "django.db.backends.mysql",
		"NAME": "employees",
		"USER": "root",
		"PASSWORD": "admin",
		"HOST": "127.0.0.1",
		"PORT": "3306",
	}
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
	},
	{"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
	{"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
	{"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = "ko-kr"

# TIME_ZONE = 'UTC'
TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Django Admin
# GRAPPELLI_ADMIN_TITLE = 'back office'
# ADMIN_TITLE = '123'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]

# MEDIA
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# 각 media 파일에 대한 URL Prefix
# MEDIA_URL = '/media/'  # 항상 / 로 끝나도록 설정
# MEDIA_URL = 'http://static.myservice.com/media/' 다른 서버로 media 파일 복사시

# 업로드된 파일을 저장할 디렉토리 경로
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# export DJANGO_SETTINGS_MODULE=fastoffice.settings.dev
# python manage.py runserver
